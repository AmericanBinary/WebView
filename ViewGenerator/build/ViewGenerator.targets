<Project>
  <PropertyGroup>

    <BuildDependsOn>
      LinkNodeModules;
      GenerateDefaultStyleSheet;
      GenerateBundle;
      $(BuildDependsOn);
    </BuildDependsOn>

    <CleanDependsOn>
      CleanLegacyEntryFiles;
      CleanLegacyJSFiles;
      CleanLegacyCSSFiles;
      $(CleanDependsOn);
    </CleanDependsOn>

    <PrepareResourceNamesDependsOn>
      IncludeGeneratedResources;
      $(PrepareResourceNamesDependsOn)
    </PrepareResourceNamesDependsOn>

  </PropertyGroup>

  <PropertyGroup Condition="'$(ViewGeneratorNodeJsPath)' == ''">
    <!-- Best effort probing for node.exe in the VS install folder. If not found, then we assume node is already installed and on the system path. -->
    <ViewGeneratorNodeJsPath Condition="'$(OS)' == 'Windows_NT' AND Exists('$(MSBuildExtensionsPath)\Microsoft\VisualStudio\NodeJs\node.exe')">$(MSBuildExtensionsPath)\Microsoft\VisualStudio\NodeJs\</ViewGeneratorNodeJsPath>

    <!--Legacy node.exe path for VS -->
    <ViewGeneratorNodeJsPath Condition="'$(ViewGeneratorNodeJsPath)' == '' AND '$(OS)' == 'Windows_NT' AND Exists('$(VsInstallRoot)\Common7\IDE\CommonExtensions\Microsoft\NodeJs\node.exe')">$(VsInstallRoot)\Common7\IDE\CommonExtensions\Microsoft\NodeJs\</ViewGeneratorNodeJsPath>

    <!--Another legacy node.exe path for VS -->
    <ViewGeneratorNodeJsPath Condition="'$(ViewGeneratorNodeJsPath)' == '' AND '$(OS)' == 'Windows_NT' AND Exists('$(VsInstallRoot)\Web\External\x86\node.exe')">$(VsInstallRoot)\Web\External\x86\</ViewGeneratorNodeJsPath>

    <ViewGeneratorNodeJsExe>$(ViewGeneratorNodeJsPath)node.exe</ViewGeneratorNodeJsExe>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ViewGeneratorToolsPath)' == ''">
    <ViewGeneratorToolsPath>$([System.IO.Path]::GetFullPath(&quot;$(MSBuildThisFileDirectory)..\tools&quot;))</ViewGeneratorToolsPath>
  </PropertyGroup>

  <Target Name="LinkNodeModules" Condition="'$(FrameworkRelativePath)' != ''" >
    <CallTarget Targets="UnlinkNodeModules" Condition="Exists('$(ProjectDir)node_modules\webview.framework')" />

    <Exec Command="mklink /D &quot;$(ProjectDir)node_modules\webview.framework&quot; &quot;$(ProjectDir)$(FrameworkRelativePath)node_modules&quot;" />
  </Target>

  <Target Name="UnlinkNodeModules">
    <RemoveDir Directories="$(ProjectDir)node_modules\webview.framework" />
  </Target>
    
  <Target Name="CleanLegacyEntryFiles" >
    <ItemGroup>
      <EntryFilesToDelete Include="**\*.entry" />
    </ItemGroup>
    <Message Text="Deleting old files: @(EntryFilesToDelete)" Importance="high" />
    <Delete Files="@(EntryFilesToDelete)"/>
  </Target>

  <Target Name="CleanLegacyJSFiles" >
    <ItemGroup>
      <JSFilesToDelete Include="**\*.js" Exclude="node_modules\**\*.js"/>
    </ItemGroup>
    <Message Text="Deleting old files: @(JSFilesToDelete)" Importance="high" />
    <Delete Files="@(JSFilesToDelete)"/>
  </Target>

  <Target Name="CleanLegacyCSSFiles" >
    <ItemGroup>
      <CSSFilesToDelete Include="**\*.css" Exclude="node_modules\**\*.css;**\*.min.css"/>
    </ItemGroup>
    <Message Text="Deleting old files: @(CSSFilesToDelete)" Importance="high" />
    <Delete Files="@(CSSFilesToDelete)"/>
  </Target>

  <Target Name="InstallWebpackDependencies">
    <Message Importance="High" Text="Installing node modules (at $(ViewGeneratorToolsPath))" />
    <Exec Command="&quot;$(ViewGeneratorNodeJsPath)npm&quot; --prefix &quot;$(ViewGeneratorToolsPath)&quot; install &quot;$(ViewGeneratorToolsPath)&quot; --scripts-prepend-node-path" />
  </Target>

  <Target Name="GenerateDefaultStyleSheet" DependsOnTargets="LinkNodeModules;InstallWebpackDependencies" Inputs="@(DefaultStyleSheet)" Outputs="%(DefaultStyleSheet.Filename).css" >
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
      <WebpackBuildMode>development</WebpackBuildMode>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
      <WebpackBuildMode>production</WebpackBuildMode>
    </PropertyGroup>
    <Exec Command="&quot;$(ViewGeneratorNodeJsExe)&quot; &quot;$(ViewGeneratorToolsPath)\node_modules\webpack\bin\webpack.js&quot; --config &quot;$(ViewGeneratorToolsPath)\webpack_stylesheets.config.js&quot; --mode $(WebpackBuildMode) --entryPath &quot;%(DefaultStyleSheet.Identity)&quot;" />
  </Target>

  <Target Name="GenerateBundle" DependsOnTargets="InstallWebpackDependencies;GenerateDefaultStyleSheet">
    <PropertyGroup Condition="'$(WebpackConfigFileName)' == ''">
      <WebpackConfigFileName>webpack_views</WebpackConfigFileName>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
      <WebpackBuildMode>development</WebpackBuildMode>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
      <WebpackBuildMode>production</WebpackBuildMode>
    </PropertyGroup>

    <Exec Command="&quot;$(ViewGeneratorNodeJsExe)&quot; &quot;$(ViewGeneratorToolsPath)\node_modules\webpack\bin\webpack.js&quot; --config &quot;$(ViewGeneratorToolsPath)\$(WebpackConfigFileName).config.js&quot; --mode $(WebpackBuildMode)" />

    <CallTarget Targets="UnlinkNodeModules" Condition="Exists('$(ProjectDir)node_modules\webview.framework')" />
  </Target>

  <Target Name="IncludeGeneratedResources" DependsOnTargets="GenerateBundle">
    <ItemGroup>
      <EmbeddedResource Include="**\*.js" Exclude="node_modules\**\*.js" />
      <EmbeddedResource Include="**\*.css" Exclude="node_modules\**\*.css;**\*.min.css" />
      <EmbeddedResource Include="**\*.entry" />
    </ItemGroup>
  </Target>

</Project>